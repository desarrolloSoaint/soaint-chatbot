# Application

# Logging
logging.level.com.sodexo.central = DEBUG
logging.level.org.springframework = INFO
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter = DEBUG

# Server
server.port = 8000
server.servlet.session.timeout = 3600

# Jackson
spring.jackson.default-property-inclusion = NON_NULL
spring.jackson.serialization.write-dates-as-timestamps = false

# Spring MVC
spring.mvc.locale = es_VE

# Security OAUTH2
#security.oauth2.client_secret = {noop}$2a$04$e/c1/RfsWuThaWFCrcCuJeoyvwCV0URN/6Pn9ZFlrtIWaU/vj/BfG
#security.oauth2.client_id = soaint-client
#security.oauth2.client_normal_id = normal-client
#security.oauth2.grant_type_password = password
#security.oauth2.authorization_code = authorization_code
#security.oauth2.refresh_token = refresh_token
#security.oauth2.implicit = implicit
#security.oauth2.scope_read = scope_read
#security.oauth2.scope_write = scope_write
#security.oauth2.trust = trust
#security.oauth2.authoritie_client = ROLE_CLIENT
#security.oauth2.authoritie_trusted_client = ROLE_TRUSTED_CLIENT
#security.oauth2.access_tokn_validity_seconds = 1200
#security.oauth2.frefresh_tokn_validity_seconds = 3600
#security.oauth2.filter-order = 3
#security.oauth2.enable-csrf = false
#security.oauth2.username = admin
#security.oauth2.password = password
#security.oauth2.signin_key = 123

# URL Token
#security.oauth2.token_url = https://soaint-sa-chatbot.herokuapp.com/api/v1/auth/token

# URL Token Local
#security.oauth2.token_url = http://localhost:8080/api/v1/auth/token

# Cross Origin
security.endpoints.cors.allowed-origins = http://localhost:4200,https://soniat-chat-bot.wep.app,http://190.79.188.199,https://soaint-sa-chatbot.herokuapp.com,http://soaint-sa-chatbot.herokuapp.com,https://elianhersblanco.github.io,https://ramoeg04.github.io,http://localhost:8080
#@CrossOrigin(origins = "http://localhost:4200")

# ERRORS Handle
#spring.mvc.throw-exception-if-no-handler-found=true

# Server path files to send
#app.activation.pathfiles = /home/jguerra/

#Conection a Database, Details for DB
#spring.datasource.url=jdbc:postgresql://localhost:5432/chatbot
#spring.datasource.username=postgres
#spring.datasource.password=123456

spring.datasource.url=postgres://gzwojajudyzute:ea009453b1e623568a0376cf0e1f0b6ff92ab7c4768516b8ce3f59c947e69d5f@ec2-54-196-65-186.compute-1.amazonaws.com:5432/d1k6ik4uvuuab8
spring.datasource.username=gzwojajudyzute
spring.datasource.password=ea009453b1e623568a0376cf0e1f0b6ff92ab7c4768516b8ce3f59c947e69d5f

# Hibernate properties
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.format_sql=true

#JWT Security
jwt.secret = secret
jwt.expiration = 36000

#Multipart cantidad maxima de archivos
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

server.tomcat.max-swallow-size=-1
